public class Employee
{
    String name;
    String email;
    String address;
    String company;
    int[] workDays;
    int[] remoteDays;
    int district;
    int mandatoryWorkDays = 3; //days the employee must work, default 3
    int startDay; //1-5

}

public class Company
{
    String name;
    String location;
    Employee[] subordinates; 
}

public Company(String name, String location)
 {
    this.name = name;
    this.location = location;
    this.subordinates = new Employee[0]; // Initialize the array of subordinates
}

public void createEmployee(String name, String email, String address, int[] workDays, int[] remoteDays, int district)
 {
    
    Employee newEmployee = new Employee();
    newEmployee.name = name;
    newEmployee.email = email;
    newEmployee.address = address;
    newEmployee.workDays = assignWorkdays(newEmployee.mandatoryWorkDays, newEmployee.startDay);
    newEmployee.remoteDays = assignRemotedays(newEmployee.workDays, newEmployee.mandatoryWorkDays, newEmployee.startDay);
    newEmployee.district = district;

    // Add the new employee to the array of subordinates
    addEmployee(newEmployee);
}

public void addEmployee(Employee newEmployee)
{
 
 Employee[] newSubordinates = new Employee[subordinates.length + 1];

 // Copy existing employees to the new array
 System.arraycopy(subordinates, 0, newSubordinates, 0, subordinates.length);
 
 newSubordinates[subordinates.length] = newEmployee;
 subordinates = newSubordinates;
}

public int[] assignWorkdays(int mandatoryWorkDays,int startDay)
{
    int[] Wrkdays = new int[mandatoryWorkDays];
    int week_start = startDay;
    for(int i= 0; i < mandatoryWorkDays; i++)
    {
        Wrkdays[i] = (week_start % 5);
        week_start ++;
    }
    return Wrkdays;
}

public int[] assignRemotedays(int[] Wrkdays, int mandatoryWorkDays, int startDay)
{
    int freeDays = 5 - mandatoryWorkDays;
    int[] remoteDays = new int[freeDays];
    int day = 1;
  for (int i = 0; i < 5; i++)
  {
    if( day != Wrkdays[i])
    {
        remoteDays[i] = day;
    }
  day++;
 }
   return remoteDays; 
}
